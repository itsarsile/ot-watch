generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id                Int                @id @default(autoincrement())
  username          String             @unique
  password          String
  avatarUrl         String?
  role              Roles
  createdAt         DateTime           @default(now())
  adminProfile      adminProfile?
  salesProfile      salesProfile?
  superVisorProfile superVisorProfile?
  superAdminProfile superAdminProfile?
  userAttendance    userAttendance[]
  dailyReport       dailyReport[]
  visitorReport     visitorReport[]
}

model adminProfile {
  id          Int       @id @default(autoincrement())
  name        String
  nik         Int       @unique
  phoneNumber String?
  createdAt   DateTime? @default(now())
  userId      Int       @unique
  user        User      @relation(fields: [userId], references: [id])
}

model salesProfile {
  id                  Int                @id @default(autoincrement())
  name                String
  kcontact            String             @unique
  phoneNumber         String
  createdAt           DateTime?          @default(now())
  userId              Int                @unique
  superVisorProfileId Int?
  agency              String
  branch              String
  status              Status?
  user                User               @relation(fields: [userId], references: [id])
  superVisorProfile   superVisorProfile? @relation(fields: [superVisorProfileId], references: [id])

  @@index([superVisorProfileId])
}

model superVisorProfile {
  id          Int            @id @default(autoincrement())
  name        String
  kcontact    String         @unique
  phoneNumber String
  createdAt   DateTime?      @default(now())
  userId      Int            @unique
  agency      String
  branch      String
  status      Status?
  user        User           @relation(fields: [userId], references: [id])
  salesForces salesProfile[]
}

model superAdminProfile {
  id          Int    @id @default(autoincrement())
  name        String
  phoneNumber Int
  userId      Int    @unique
  user        User   @relation(fields: [userId], references: [id])
}

model userAttendance {
  id           Int       @id @default(autoincrement())
  checkInTime  DateTime  @db.Timestamptz(6)
  checkOutTime DateTime? @db.Timestamptz(6)
  latitude     Float?
  longitude    Float?
  photo        String?
  otLocation   String?
  userId       Int
  user         User      @relation(fields: [userId], references: [id])

  @@index([userId])
}

model visitorReport {
  id                  Int      @id @default(autoincrement())
  visitorName         String
  visitorPhone        String
  visitorAddress      String
  visitorNeeds        String
  visitorDealing      String
  visitorTrackId      String?
  createdAt           DateTime @default(now())
  userId              Int?
  user                User?    @relation(fields: [userId], references: [id])

  @@index([userId])
}

model dailyReport {
  id           Int    @id @default(autoincrement())
  visitorCount Int
  journal      String
  userId       Int?
  User         User?  @relation(fields: [userId], references: [id])

  @@index([userId])
}

enum Roles {
  SUPERADMIN
  SUPERVISOR
  ADMIN
  USER
}

enum Status {
  INACTIVE
  ACTIVE
  SUSPENDED
  DELETED
}
